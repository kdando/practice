import React from 'react';
import ReactDOM from 'react-dom';

class PropsDisplayer extends React.Component {
  render() {
  	const stringProps = JSON.stringify(this.props);

    return (
      <div>
        <h1>CHECK OUT MY PROPS OBJECT</h1>
        <h2>{stringProps}</h2>
      </div>
    );
  }
}

// ReactDOM.render goes here:
ReactDOM.render(<PropsDisplayer myProp="Hello" />, document.getElementById("app"));

////////////////////
Notice that the property "myProp" does NOT need to be created inside the class declaration - here we just create it when we instantiate the component in ReactDOM.render - i.e. when we actually create the component. Compare the following:
///////////////////

class Greeting extends React.Component {
  render() {
    return <h1>Hi there, {this.props.firstName}</h1>;
  }
}

ReactDOM.render(
  <Greeting firstName='Alish' />, 
  document.getElementById('app')
);

///////////////////
Here the *class component* declaration references a prop ("firstName") that isn't actually created yet - we do that in the ReactDOM.render() 
//////////////////