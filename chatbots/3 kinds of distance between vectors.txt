import numpy as np
from scipy.spatial.distance import cityblock, euclidean, cosine
import spacy

# load word embedding model
nlp = spacy.load('en')

# define word embedding vectors
happy_vec = nlp('happy').vector
sad_vec = nlp('sad').vector
angry_vec = nlp('angry').vector

# calculate Manhattan distance
man_happy_sad = cityblock(happy_vec, sad_vec)
man_sad_angry = cityblock(sad_vec, angry_vec)
print(f"manhattan distance between happy and sad is {man_happy_sad}")
print(f"manhattan distance between sad and angry is {man_sad_angry}")

# calculate Euclidean distance
euc_happy_sad = euclidean(happy_vec, sad_vec)
euc_sad_angry = euclidean(sad_vec, angry_vec)
print(f"euclidean distance between happy and sad is {euc_happy_sad}")
print(f"euclidean distance between sad and angry is {euc_sad_angry}")

# calculate cosine distance
cos_happy_sad = cosine(happy_vec, sad_vec)
cos_sad_angry = cosine(sad_vec, angry_vec)
print(f"cosine distance between happy and sad is {cos_happy_sad}")
print(f"cosine distance between sad and angry is {cos_sad_angry}")

###
Final output:
###

manhattan distance between happy and sad is 129.62265014648438
manhattan distance between sad and angry is 136.0589141845703
euclidean distance between happy and sad is 16.4527587890625
euclidean distance between sad and angry is 16.960039138793945
cosine distance between happy and sad is 0.24988871812820435
cosine distance between sad and angry is 0.26635223627090454